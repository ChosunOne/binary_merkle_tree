language: rust
cache: cargo
rust:
  - stable
  - beta
  - nightly
os:
  - linux
  - osx
  - windows
matrix:
  allow_failures:
    - rust: nightly
  fast_finish: true

sudo: true

before_install:
  - |
    if [[ "$TRAVIS_OS_NAME" == "linux" ]]; then
      sudo apt-get update
    fi

addons:
  apt:
    packages:
      - libcurl4-openssl-dev
      - libelf-dev
      - libdw-dev
      - cmake
      - gcc
      - binutils-dev

# Add clippy
before_script:
  - |
    if [[ "$TRAVIS_RUST_VERSION" == "nightly" ]]; then
      ( ( cargo install clippy && export CLIPPY=true ) || export CLIPPY=false );
    fi
  - export PATH=$PATH:~/.cargo/bin

script:
  - |
    if [[ "$TRAVIS_RUST_VERSION" == "1.0.0" ]]; then
      ((cargo build --verbose &&
        cargo test --verbose &&
        cargo test --features="default_tree" --verbose) ||
        (cargo build --verbose --all &&
         cargo test --verbose --all &&
         cargo test --features="default_tree" --verbose --all));
    fi
  - |
      if [[ "$TRAVIS_RUST_VERSION" == "nightly" && $CLIPPY ]]; then
        cargo clippy
      fi


after_success:
  # Coverage report
  - |
    if [[ "$TRAVIS_OS_NAME" == "linux" && "$TRAVIS_RUST_VERSION" == "stable" ]]; then
      wget https://github.com/SimonKagstrom/kcov/archive/master.tar.gz &&
      tar xzf master.tar.gz &&
      cd kcov-master &&
      mkdir build &&
      cd build &&
      cmake .. &&
      make &&
      sudo make install &&
      cd ../.. &&
      rm -rf kcov-master &&
      for file in target/debug/starling-*[^\.d]; do mkdir -p "target/cov/$(basename $file)"; kcov --exclude-pattern=/.cargo,/usr/lib --verify "target/cov/$(basename $file)" "$file"; done &&
      for file in target/debug/merkle_bit-*[^\.d]; do mkdir -p "target/cov/$(basename $file)"; kcov --exclude-pattern=/.cargo,/usr/lib --verify "target/cov/$(basename $file)" "$file"; done &&
      bash <(curl -s https://codecov.io/bash) &&
      echo "Uploaded code coverage"
    fi